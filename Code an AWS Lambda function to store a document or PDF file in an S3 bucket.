import json
import boto3
import base64
import uuid
from botocore.exceptions import NoCredentialsError

# Initialize S3 client
s3_client = boto3.client('s3')

def lambda_handler(event, context):
    # Get the bucket name and base64-encoded file data from the event
    bucket_name = event.get('bucket_name')
    file_data_base64 = event.get('file_data')
    file_name = event.get('file_name', str(uuid.uuid4()) + '.pdf')  # Use UUID if no name is provided
    
    if not bucket_name or not file_data_base64:
        return {
            'statusCode': 400,
            'body': json.dumps({'error': 'Bucket name and file data are required.'})
        }

    try:
        # Decode the base64-encoded file data
        file_data = base64.b64decode(file_data_base64)

        # Upload file to S3
        s3_client.put_object(
            Bucket=bucket_name,
            Key=file_name,
            Body=file_data,
            ContentType='application/pdf'  # Assuming the file is a PDF
        )

        return {
            'statusCode': 200,
            'body': json.dumps({'message': f'File uploaded successfully to {bucket_name}/{file_name}'})
        }
    
    except NoCredentialsError:
        return {
            'statusCode': 403,
            'body': json.dumps({'error': 'AWS credentials not found or invalid.'})
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': f'Failed to upload file: {str(e)}'})
        }
